version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: univault-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./3_database:/docker-entrypoint-initdb.d
    networks:
      - univault-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # UniVault Application
  app:
    build: .
    container_name: univault-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: database
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3000
    depends_on:
      database:
        condition: service_healthy
    networks:
      - univault-network
    volumes:
      - app_uploads:/app/uploads
      - app_logs:/app/logs

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: univault-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - univault-network

volumes:
  mysql_data:
  app_uploads:
  app_logs:

networks:
  univault-network:
    driver: bridge
